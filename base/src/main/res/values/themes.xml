<?xml version="1.0" encoding="utf-8"?><!--
~ Copyright (C) 2019 The Android Open Source Project
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~      http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<resources xmlns:tools="http://schemas.android.com/tools">
    <!--Top level DayNight theme to be used in AndroidManifest.xml-->
    <style name="Theme.MyApp" parent="Base.Theme.MyApp" />
    <!--Base custom theme which will be shared between both light and dark theme variants-->
    <style name="Base.Theme.MyApp" parent="Base.Theme.MaterialThemeBuilder">
        <!--Material color attributes (light theme) -->
        <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
        <!--colorSecondary colors are most often used as accents on components, such as FABs and -->
        <!--selection controls.-->
        <item name="colorPrimary">@color/red</item>
        <item name="colorPrimaryVariant">@color/redDark</item>
        <item name="colorSecondary">@color/blue</item>
        <item name="colorSecondaryVariant">@color/blue</item>
        <!--colorBackground appears behind scrollable content and is used for the default window-->
        <!--background. colorSurface is mapped to the surface of components such as cards, sheets-->
        <!--and menus. colorError is used to indicate an error state for components such as-->
        <!--text fields.-->
        <item name="android:windowBackground">@color/red</item>
        <item name="android:colorBackground">@android:color/transparent</item>
        <item name="colorSurface">@color/white</item>
        <item name="colorError">@color/red_error</item>
        <item name="android:textColorPrimary">@color/primary_text_color</item>
        <!--"On" colors define how text, icons and strokes are colored in relation to the surface-->
        <!--on which they appear.-->
        <item name="colorOnPrimary">@color/white</item>
        <item name="colorOnSecondary">@color/white</item>
        <item name="colorOnBackground">@color/black</item>
        <item name="colorOnSurface">@color/black</item>
        <item name="colorOnError">@color/black</item>
        <item name="android:fontFamily">@font/poppins_medium</item>
        <item name="fontFamily">@font/poppins_medium</item>
        <!--Material type attributes-->
        <item name="textAppearanceHeadline1">@style/TextAppearance.MyTheme.Headline1</item>
        <item name="textAppearanceHeadline2">@style/TextAppearance.MyTheme.Headline2</item>
        <item name="textAppearanceHeadline3">@style/TextAppearance.MyTheme.Headline3</item>
        <item name="textAppearanceHeadline4">@style/TextAppearance.MyTheme.Headline4</item>
        <item name="textAppearanceHeadline5">@style/TextAppearance.MyTheme.Headline5</item>
        <item name="textAppearanceHeadline6">@style/TextAppearance.MyTheme.Headline6</item>
        <item name="textAppearanceSubtitle1">@style/TextAppearance.MyTheme.Subtitle1</item>
        <item name="textAppearanceSubtitle2">@style/TextAppearance.MyTheme.Subtitle2</item>
        <item name="textAppearanceBody1">@style/TextAppearance.MyTheme.Body1</item>
        <item name="textAppearanceBody2">@style/TextAppearance.MyTheme.Body2</item>
        <item name="textAppearanceButton">@style/TextAppearance.MyTheme.Button</item>
        <item name="textAppearanceCaption">@style/TextAppearance.MyTheme.Caption</item>
        <item name="textAppearanceOverline">@style/TextAppearance.MyTheme.Overline</item>

        <!--Button Styles -->
        <item name="borderlessButtonStyle">@style/Widget.MyTheme.Button.TextButton</item>
        <item name="materialButtonOutlinedStyle">@style/Widget.MyTheme.Button.OutlinedButton</item>
        <item name="materialButtonStyle">@style/Widget.MyTheme.Button</item>

        <!--RadioButton-->
        <item name="radioButtonStyle">@style/Widget.MyTheme.RadioButton</item>

        <!--Material shape attributes-->
        <item name="shapeAppearanceSmallComponent">@style/ShapeAppearance.MyTheme.SmallComponent
        </item>
        <item name="shapeAppearanceMediumComponent">@style/ShapeAppearance.MyTheme.MediumComponent
        </item>
        <item name="shapeAppearanceLargeComponent">@style/ShapeAppearance.MyTheme.LargeComponent
        </item>
        <item name="bottomNavigationStyle">@style/Widget.MyTheme.BottomNavigationView</item>
        <!--Component styles-->
        <item name="materialAlertDialogTheme">@style/ThemeOverlay.MaterialComponents.Dialog.Alert
        </item>
        <item name="bottomSheetDialogTheme">@style/ThemeOverlay.MyTheme.BottomSheetDialog</item>
        <item name="navigationViewStyle">@style/Widget.MyTheme.NavigationView</item>
        <item name="toolbarStyle">@style/Widget.MaterialComponents.Toolbar.PrimarySurface</item>

        <item name="chipStyle">@style/Widget.MyTheme.Chip</item>
        <item name="tabStyle">@style/Widget.MyTheme.TabLayout</item>
    </style>

    <style name="Base.Theme.MaterialThemeBuilder" parent="Theme.MaterialComponents.Light.NoActionBar">
        <item name="android:statusBarColor" tools:ignore="NewApi">@color/redDark</item>
        <item name="android:windowLightStatusBar" tools:ignore="NewApi">false</item>

        <item name="android:navigationBarColor" tools:ignore="NewApi">?attr/colorPrimary</item>
        <item name="android:windowLightNavigationBar" tools:ignore="NewApi">false</item>
        <item name="android:navigationBarDividerColor" tools:ignore="NewApi">
            ?attr/colorPrimaryVariant
        </item>
    </style>

    <style name="altertDialog" parent="Theme.MaterialComponents.Dialog">
        <item name="colorPrimary">?attr/colorPrimary</item>
    </style>

    <style name="Theme.MyApp.Home" parent="Base.Theme.MyApp.Home" />

    <style name="Base.Theme.MyApp.Home" parent="Base.Theme.MyApp">
        <item name="android:windowBackground">@color/white</item>
        <item name="android:statusBarColor" tools:ignore="NewApi">@color/white</item>
        <item name="android:windowLightStatusBar" tools:ignore="NewApi">true</item>

        <item name="android:navigationBarColor" tools:ignore="NewApi">?attr/colorPrimary</item>
        <item name="android:windowLightNavigationBar" tools:ignore="NewApi">false</item>
        <item name="android:navigationBarDividerColor" tools:ignore="NewApi">?attr/colorPrimary
        </item>
    </style>


    <!--  <style name="widgetStyle" parent="Base.Theme.MyApp">
          &lt;!&ndash;Material color attributes (light theme) &ndash;&gt;
          &lt;!&ndash;colorPrimary colors map to components and elements, such as app bars and buttons. &ndash;&gt;
          &lt;!&ndash;colorSecondary colors are most often used as accents on components, such as FABs and &ndash;&gt;
          &lt;!&ndash;selection controls.&ndash;&gt;
          <item name="colorPrimary">@color/brown_200</item>
          <item name="colorPrimaryVariant">@color/brown_700</item>
          <item name="colorSecondary">@color/brown_200</item>
          <item name="colorSecondaryVariant">@color/brown_700</item>
      </style>-->
</resources>
